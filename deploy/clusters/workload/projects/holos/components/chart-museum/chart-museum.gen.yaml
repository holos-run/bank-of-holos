apiVersion: v1
kind: Service
metadata:
  labels:
    app.holos.run/cluster.name: workload
    app.holos.run/component.name: chart-museum
    app.holos.run/project.name: holos
    app.holos.run/team.name: holos-authors
    argocd.argoproj.io/instance: holos-chart-museum
  name: chartmuseum
  namespace: holos
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app: chartmuseum
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.holos.run/cluster.name: workload
    app.holos.run/component.name: chart-museum
    app.holos.run/project.name: holos
    app.holos.run/team.name: holos-authors
    argocd.argoproj.io/instance: holos-chart-museum
  name: chartmuseum
  namespace: holos
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chartmuseum
  template:
    metadata:
      labels:
        app: chartmuseum
    spec:
      containers:
      - env:
        - name: PORT
          value: "80"
        - name: STORAGE
          value: local
        - name: STORAGE_LOCAL_ROOTDIR
          value: /charts
        envFrom:
        - secretRef:
            name: chartmuseum-auth
        image: ghcr.io/helm/chartmuseum:v0.15.0
        name: chartmuseum
        ports:
        - containerPort: 80
          name: http
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - mountPath: /charts
          name: charts
      volumes:
      - emptyDir: {}
        name: charts
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  labels:
    app.holos.run/cluster.name: workload
    app.holos.run/component.name: chart-museum
    app.holos.run/project.name: holos
    app.holos.run/team.name: holos-authors
    argocd.argoproj.io/instance: holos-chart-museum
  name: chartmuseum-auth
  namespace: holos
spec:
  dataFrom:
  - rewrite:
    - transform:
        template: password
    sourceRef:
      generatorRef:
        apiVersion: generators.external-secrets.io/v1alpha1
        kind: Password
        name: admin-password-generator
  refreshInterval: 24h
  target:
    creationPolicy: Owner
    deletionPolicy: Delete
    template:
      data:
        BASIC_AUTH_PASS: '{{ .password }}'
        BASIC_AUTH_USER: admin
      engineVersion: v2
      mergePolicy: Merge
      type: Opaque
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: ReferenceGrant
metadata:
  labels:
    app.holos.run/cluster.name: workload
    app.holos.run/component.name: chart-museum
    app.holos.run/project.name: holos
    app.holos.run/team.name: holos-authors
    argocd.argoproj.io/instance: holos-chart-museum
  name: istio-ingress
  namespace: holos
spec:
  from:
  - group: gateway.networking.k8s.io
    kind: HTTPRoute
    namespace: istio-ingress
  to:
  - group: ""
    kind: Service
---
apiVersion: generators.external-secrets.io/v1alpha1
kind: Password
metadata:
  labels:
    app.holos.run/cluster.name: workload
    app.holos.run/component.name: chart-museum
    app.holos.run/project.name: holos
    app.holos.run/team.name: holos-authors
    argocd.argoproj.io/instance: holos-chart-museum
  name: admin-password-generator
  namespace: holos
spec:
  allowRepeat: true
  digits: 4
  length: 32
  noUpper: false
  symbols: 0
