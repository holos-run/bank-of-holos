// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni vendor crd -f projects/argocd/components/kargo/vendor/1.0.3/kargo/resources/crds/kargo.akuity.io_promotions.yaml

package v1alpha1

import "strings"

// Promotion represents a request to transition a particular Stage
// into a
// particular Freight.
#Promotion: {
	// APIVersion defines the versioned schema of this representation
	// of an object.
	// Servers should convert recognized schemas to the latest
	// internal value, and
	// may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "kargo.akuity.io/v1alpha1"

	// Kind is a string value representing the REST resource this
	// object represents.
	// Servers may infer this from the endpoint the client submits
	// requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "Promotion"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace!: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}

	// Spec describes the desired transition of a specific Stage into
	// a specific
	// Freight.
	spec!: #PromotionSpec
}

// Spec describes the desired transition of a specific Stage into
// a specific
// Freight.
#PromotionSpec: {
	// Freight specifies the piece of Freight to be promoted into the
	// Stage
	// referenced by the Stage field.
	freight: strings.MinRunes(1)

	// Stage specifies the name of the Stage to which this Promotion
	// applies. The Stage referenced by this field MUST be in the same
	// namespace as the Promotion.
	stage: strings.MinRunes(1) & {
		=~"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
	}

	// Steps specifies the directives to be executed as part of this
	// Promotion.
	// The order in which the directives are executed is the order in
	// which they
	// are listed in this field.
	steps?: [...{
		// As is the alias this step can be referred to as.
		as?: string

		// Config is the configuration for the directive.
		config?: _

		// Uses identifies a runner that can execute this step.
		uses: strings.MinRunes(1)
	}]
}
