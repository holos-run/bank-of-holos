apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.holos.run/cluster.name: workload
    app.holos.run/component.name: private-chart
    app.holos.run/project.name: holos
    app.holos.run/team.name: holos-authors
    app.kubernetes.io/instance: mychart
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mychart
    app.kubernetes.io/version: 1.16.0
    argocd.argoproj.io/instance: holos-private-chart
    helm.sh/chart: mychart-0.1.0
  name: mychart
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.holos.run/cluster.name: workload
    app.holos.run/component.name: private-chart
    app.holos.run/project.name: holos
    app.holos.run/team.name: holos-authors
    app.kubernetes.io/instance: mychart
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mychart
    app.kubernetes.io/version: 1.16.0
    argocd.argoproj.io/instance: holos-private-chart
    helm.sh/chart: mychart-0.1.0
  name: mychart
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/instance: mychart
    app.kubernetes.io/name: mychart
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.holos.run/cluster.name: workload
    app.holos.run/component.name: private-chart
    app.holos.run/project.name: holos
    app.holos.run/team.name: holos-authors
    app.kubernetes.io/instance: mychart
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mychart
    app.kubernetes.io/version: 1.16.0
    argocd.argoproj.io/instance: holos-private-chart
    helm.sh/chart: mychart-0.1.0
  name: mychart
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: mychart
      app.kubernetes.io/name: mychart
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: mychart
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mychart
        app.kubernetes.io/version: 1.16.0
        helm.sh/chart: mychart-0.1.0
    spec:
      containers:
      - image: nginx:1.16.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /
            port: http
        name: mychart
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: http
        resources: {}
        securityContext: {}
      securityContext: {}
      serviceAccountName: mychart
